/**
 * Copyright (c) 2025 Zack Puhl <github@xmit.xyz> - https://github.com/NotsoanoNimus/mftah.c3l
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */
module mftah_test::xoshiro @test;

import mftah::prng @public;

import std::io;
import libc;

import std::core::test;


struct TestBoundaries
{
	ulong low;
	ulong high;
}


const TestBoundaries[*] TEST_BOUNDS = {
	{ 20, 200 },
	{ 0, 1 },
	{ 297209374, 203934096740967 }
};

const ROUNDS = 16_000_000;

fn void working_bounds()
{
	Xoshiro256pp x @noinit;
	x.init();

	usz i = 0;

	foreach (bound : TEST_BOUNDS[..]) {
		for (i = 0; i < ROUNDS; ++i) {
			ulong next = x.next_bounded(bound.low, bound.high);

			test::@check(next <= bound.high, "next (%d) must be <= high (%d)", next, bound.high);
			test::@check(next >= bound.low, "next (%d) must be >= low (%d)", next, bound.low);
		}
	}
}
